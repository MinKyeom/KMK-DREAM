Q: boolean[] seen = new boolean[256]; 이거 내부 배열은 어떻게 구성된거야? true 인 false인지 모르지 않아?

A:좋은 질문이에요!
이 코드의 내부 구조와 동작 방식을 이해하면, Java 배열의 기본 초기화 원리까지 파악할 수 있습니다.

📌 코드 설명
boolean[] seen = new boolean[256];

의미:

boolean 타입의 배열을 길이 256으로 선언한 것입니다.

즉, 0부터 255까지 총 256개의 칸이 있는 배열을 만든 것.

❓ 그럼 배열 안의 값은 뭔가요?

Java에서는 배열을 만들면, 각 요소는 자동으로 기본값으로 초기화됩니다.

기본값 (기억하세요!):
타입	기본값
int	0
double	0.0
boolean	false
char	\u0000 (null 문자)
객체 참조 타입	null

📌 따라서:

boolean[] seen = new boolean[256];


→ 내부는 다음과 같이 초기화되어 있어요:

[false, false, false, ..., false]  // 총 256개

🔍 그래서 “true인지 false인지 모르지 않아?”에 대한 답변

처음 배열을 선언하고 나면, 전부 false로 자동 설정되어 있기 때문에 "모르지 않아?" → 아니요, 모두 false입니다.

Java는 메모리를 안전하게 초기화하기 때문에, 배열을 생성만 해도 값은 predictable 합니다.

💡 seen 배열을 이렇게 쓰는 이유는?

보통 이런 식의 boolean 배열은 무언가를 "이미 봤는지(seen)" 체크할 때 사용합니다.

예시: 문자열에서 중복 문자 찾기
public boolean hasDuplicateChars(String s) {
    boolean[] seen = new boolean[256];  // ASCII 기준

    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        if (seen[c]) return true;  // 이미 본 문자
        seen[c] = true;            // 처음 보는 문자
    }
    return false;
}


문자 c를 정수 인덱스로 사용해서 배열에 체크

한 번이라도 이미 true라면 중복된 문자가 있는 것

✅ 요약
질문	답변
boolean[] seen = new boolean[256]; 내부 구성은?	false로 256개 초기화됨
값이 뭔지 알 수 있나?	네, 모두 false (Java가 자동 초기화함)
언제 쓰는가?	무언가를 "이미 봤는지" 체크할 때 자주 사용됨
